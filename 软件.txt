IT，软件和编程
2018-08-05

软件运行于硬件之上，准确的说是计算机之上，因为绝大多数的硬件自身不具备计算能力，仅作为计算机的外部设备。

计算机就是通用图灵机的物理实现，基于冯诺伊曼结构。简单的说就是内置了一条可以完成任何可计算任务的流水线的装置，其内部有一套指令系统，或者叫机器语言，我们可以通过这个对其进行编程控制。

程序就是指令序列，我们一般认为其等于数据结构+算法。
软件由一组程序组成，并且这其中仅有一个是主程序。多个软件部署单元协同工作组成软件系统。
软件由编程语言编写经编译或解释后在操作系统或虚拟机上运行。

如何编程？编程需要哪些知识？
	-	数学
	-	计算机基础（体系结构 操作系统 编译器 图形学 数据结构 网络 数据库）
	-	程序设计（变量 类型 函数 控制流 OO IO 并发）
	-	语言平台（语法 库 运行时）
	-	软件工程（分析 设计 构建 测试 运维）
	-	软件架构
	-	技术领域
    -	[掌握]操作系统
      -	虚拟化
    -	[了解]编译器
    -	[掌握]算法
      -	机器学习
    -	[掌握]网络/通信
      -	SDN
    -	[掌握]数据存储
      -	SQL NoSQL
      -	Cache
      -	BigData
    -	[了解?]Web/App
    -	[不涉及]UI
    -	[了解？]游戏/媒体
    -	[了解]安全
    -	[掌握]分布式系统和中间件
	-	业务领域

软件分类/应用领域
	-	系统软件
    -	操作系统
    -	驱动
    -	虚拟机
    -	病毒？
	-	编译器
	-	中间件
    -	db
    -	mq
    -	httpd
	-	网站
    -	电商
    -	搜索
    -	媒体
	-	游戏
	-	应用软件
    -	办公软件
    -	社交软件
    -	开发工具
    -	信息系统
    -	CAX
    -	多媒体
    -	工具
      -	输入法
      -	编辑器
      -	浏览器
      -	播放器
      -	解压缩 加解密
      -	下载
      -	计算器
      -	词典翻译
      -	地图导航
      -	思维导图


于我而言, 一直以来我都是在学习各种通用技术, 而不是专注在特定的平台有着明确的开发目标.
简单地说, 我不去做完整的软件产品, 而试图学习所有软件背后通用的技术, 因为
- 我不喜欢限定平台
- 觉得上层应用开发没意思
- 对于要做什么软件没想法
这么做的后果是没有任何一个领域是完全深入了解的, 并且永远有学不完的东西, 做不出独立有用的软件产品.
这条路通往架构, 如果不幸的话, 通往运维.
这难道是我学习计算机专业的目的吗?

计算机是人类迄今发明的最伟大的工具, 而编程就是掌控这种力量的巫术.
我希望学习计算机首先真正地能够帮助自己, 弥补人脑在某些方面的弱势.
此外, 编程也应是一件饶有趣味的事情, 集理性和艺术于一身.
最后才是在不经意之间改变了世界.


结论
- 从个人事业角度考虑, 网站和游戏是相对可行的
- 从个人计算机素养考虑, 掌握算法以及了解完整的软件基础设施是重要的
- 从目前的职业规划考虑, ...
